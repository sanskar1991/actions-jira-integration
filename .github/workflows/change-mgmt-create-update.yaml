name: Create JIRA Change Management Ticket

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize
      - closed
      - reopened

jobs:
  extract-ticket:
    uses: ./.github/workflows/change-management-extract-ticket.yaml
    permissions:
      pull-requests: read
      contents: read
    with:
      pr_number: ${{ github.event.pull_request.number }}

  create-change-ticket:
    needs: extract-ticket
    if: ${{ !needs.extract-ticket.outputs.ticket && (github.event.action != 'closed') }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Extract PR Author
        id: pr_author
        run: echo "PR_AUTHOR=${{ github.actor }}" >> $GITHUB_ENV

      - name: Get PR Creator Email
        id: pr_email
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_AUTHOR="${{ github.actor }}"
          EMAIL=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/users/$PR_AUTHOR" | jq -r '.email')

          if [[ "$EMAIL" == "null" || -z "$EMAIL" ]]; then
            echo "GitHub email not found for $PR_AUTHOR. Using default JIRA account."
            EMAIL="${{ secrets.JIRA_FALLBACK_EMAIL }}"
          fi

          echo "pr_email=$EMAIL" >> $GITHUB_ENV

      - name: Get PR user email
        id: get_email
        run: |
          # Fetch the user's public email using the GitHub API
          USER_EMAIL=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/users/${{ github.event.pull_request.user.login }}" | jq -r '.email')

          # If the email is not public, it will be null
          if [ "$USER_EMAIL" == "null" ]; then
            echo "User email is not public or not available."
          else
            echo "User email: $USER_EMAIL"
          fi

          # Set the email as an output for later steps
          
          echo "::set-output name=email::$USER_EMAIL"

      - name: Extract version from branch name
        id: version
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          VERSION=$(echo $BRANCH_NAME | grep -oP 'release/\K\d+\.\d+\.\d+' || echo 'unknown')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Login to JIRA
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: https://sanskarj456.atlassian.net
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      - name: Get JIRA Account ID for PR Creator
        id: lookup_jira_user
        run: |
          JIRA_USER=$(curl -s -u "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
            -X GET "https://sz.atlassian.net/rest/api/3/user/search?query=${{ env.pr_email }}" | jq -r '.[0].accountId')

          if [[ "$JIRA_USER" == "null" || -z "$JIRA_USER" ]]; then
            echo "No matching JIRA user found for $PR_AUTHOR ($pr_email). Using default service account."
            JIRA_USER="${{ secrets.JIRA_FALLBACK_ACCOUNT_ID }}"
          fi

          echo "jira_user=$JIRA_USER" >> $GITHUB_ENV

      - name: Get JIRA Account ID of PR Author
        id: jira_user_lookup
        run: |
          JIRA_USER=$(curl -s -u "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
            -X GET "https://sanskarj456.atlassian.net/rest/api/3/user/search?query=${{ env.PR_AUTHOR }}" | jq -r '.[0].accountId')

          if [[ "$JIRA_USER" == "null" || -z "$JIRA_USER" ]]; then
            echo "No matching JIRA user found for $PR_AUTHOR. Using default service account."
            JIRA_USER="${{ secrets.JIRA_FALLBACK_ACCOUNT_ID }}"
          fi
          
          echo "jira_user=$JIRA_USER" >> $GITHUB_ENV

      - name: Create JIRA Change Management Ticket
        id: create-ticket
        uses: atlassian/gajira-create@v3
        with:
          project: CHMGT
          issuetype: "[System] Change"
          summary: Release project version ${{ steps.version.outputs.version }}
          description: "Release Branch: ${{ github.event.pull_request.head.ref }}\nPR Link: ${{ github.event.pull_request.html_url }}"
          fields: |
            {
              "assignee": { "id": "${{ env.jira_user }}" },
              "customfield_10105": "Deploy changes following [QA and Deployment Process](https://sanskarj456.atlassian.net/wiki/spaces/LPD/pages/532774929/QA+and+Deployment+Process)",
              "customfield_10106": "Deploy revert or hotfix following [QA and Deployment Process](https://sanskarj456.atlassian.net/wiki/spaces/LPD/pages/532774929/QA+and+Deployment+Process)",
              "customfield_10107": "Test changes following [QA and Deployment Process](https://sanskarj456.atlassian.net/wiki/spaces/LPD/pages/532774929/QA+and+Deployment+Process)",
              "customfield_10103": "${{ format(github.event.pull_request.created_at, 'yyyy-MM-dd HH:mm') }}",
              "customfield_10104": "${{ format(github.event.pull_request.created_at, 'yyyy-MM-dd HH:mm') }}",
              "customfield_10097": [{ "name": "jira-servicemanagement-users-sanskarj456" }],
              "customfield_10010": [{ "name": "Request a change" }]
            }

      - name: Add CHMGT ticket to PR description
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const ticket = '${{ steps.create-ticket.outputs.issue }}';
            const { data: pr } = await github.rest.pulls.get({
              owner: '${{ github.repository_owner }}',
              repo: '${{ github.event.repository.name }}',
              pull_number: ${{ github.event.pull_request.number }}
            });

            const newBody = `${pr.body || ''}\n\nChange Management Ticket: https://sanskarj456.atlassian.net/browse/${ticket}`;

            await github.rest.pulls.update({
              owner: '${{ github.repository_owner }}',
              repo: '${{ github.event.repository.name }}',
              pull_number: ${{ github.event.pull_request.number }},
              body: newBody
            });

  complete-change-ticket:
    needs: extract-ticket
    if: ${{ needs.extract-ticket.outputs.ticket != '' && github.event.action == 'closed' }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - name: Login to JIRA
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: https://spinezone.atlassian.net
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      - name: Transition JIRA Ticket
        uses: atlassian/gajira-transition@v3
        with:
          issue: ${{ needs.extract-ticket.outputs.ticket }}
          transition: ${{ github.event.pull_request.merged == true && 'Complete' || 'Mark as canceled' }}
